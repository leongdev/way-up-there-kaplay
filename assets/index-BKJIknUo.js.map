{"version":3,"file":"index-BKJIknUo.js","sources":["../../src/settings/kaplay.ts","../../src/utils/types.ts","../../src/hooks/useBackground.ts","../../src/hooks/useColliders.ts","../../src/hooks/useCustomPostEffect.ts","../../src/hooks/useDebugger.ts","../../src/hooks/useFullScreen.ts","../../src/levels/level_1/config.ts","../../src/objects/brain/config.ts","../../src/objects/brain/brain.ts","../../src/settings/inputs.ts","../../src/objects/controller/config.ts","../../src/objects/controller/controller.ts","../../src/objects/fuel/config.ts","../../src/utils/constants.ts","../../src/objects/fuel/fuel.ts","../../src/objects/grass/config.ts","../../src/objects/grass/grass.ts","../../src/objects/machines/crystal/config.ts","../../src/objects/ui/progress/config.ts","../../src/objects/ui/progress/progress.ts","../../src/objects/machines/crystal/crystal.ts","../../src/objects/machines/fuel/config.ts","../../src/objects/machines/fuel/fuel.ts","../../src/objects/machines/mix/config.ts","../../src/objects/crystal/config.ts","../../src/objects/machines/mix/mix.ts","../../src/objects/machines/power/config.ts","../../src/objects/machines/power/power.ts","../../src/objects/player/config.ts","../../src/objects/crystal/crytal.ts","../../src/objects/power/config.ts","../../src/objects/power/power.ts","../../src/objects/orb/config.ts","../../src/objects/orb/orb.ts","../../src/objects/player/player.ts","../../src/objects/projectile/config.ts","../../src/objects/projectile/projectile.ts","../../src/objects/ship/config.ts","../../src/objects/ship/ship.ts","../../src/objects/stair/stair.ts","../../src/objects/starts/config.ts","../../src/objects/starts/stars.ts","../../src/scenes/initial.ts","../../src/main.ts"],"sourcesContent":["import kaplay from \"kaplay\";\nimport \"kaplay/global\";\n\nexport const k = kaplay({\n  background: [0, 0, 0],\n  scale: 4,\n  width: 480,\n  height: 280,\n  crisp: true,\n  letterbox: true,\n});\n","export enum Objects {\n  PLAYER = \"player\",\n  STAIR = \"stair\",\n  SHIP = \"ship\",\n  PROJECTILE_A = \"projectile_a\",\n  CONTROLLER = \"controller\",\n  MIX_MACHINE = \"mix_machine\",\n  PRINT_CRYSTAL_MACHINE = \"print_crystal_machine\",\n  PRINT_POWER_MACHINE = \"print_power_machine\",\n  PRINT_UI_SELECTION = \"print_ui_selection\",\n  FUEL_MACHINE = \"fuel_machine\",\n  FUEL_CELL_INDICATOR = \"fuel_cell_indicator\",\n  FUEL_CELL_A = \"fuel_cell_a\",\n  FUEL_CELL_B = \"fuel_cell_b\",\n  FUEL_CELL_C = \"fuel_cell_c\",\n  FUEL_CELL_D = \"fuel_cell_d\",\n  FUEL_CELL_E = \"fuel_cell_e\",\n  FUEL_LINE = \"fuel_line\",\n  GRASS_A = \"grass_a\",\n  GRASS_B = \"grass_b\",\n  GRASS_C = \"grass_c\",\n  GRASS_D = \"grass_d\",\n  GRASS_E = \"grass_e\",\n  GRASS_F = \"grass_f\",\n  GRASS_G = \"grass_g\",\n  GRASS_H = \"grass_h\",\n  GRASS_I = \"grass_i\",\n  GRASS_J = \"grass_j\",\n  GRASS_K = \"grass_k\",\n  GRASS_L = \"grass_l\",\n  GRASS_M = \"grass_m\",\n  GRASS_N = \"grass_n\",\n  GRASS_O = \"grass_o\",\n  GRASS_P = \"grass_p\",\n  GRASS_Q = \"grass_q\",\n  COLLIDER = \"collider\",\n  COLLIDER_GROUND = \"collider_ground\",\n  CRYSTAL = \"crystal\",\n  POWER = \"power\",\n  PROGRESS = \"progress\",\n  MIX_DISPLAY = \"mix_display\",\n  STARS = \"stars\",\n  ALERT = \"alert\",\n\n  ENEMY_A = \"enemy_a\",\n}\n\nexport enum Events {\n  // Ship Events\n  ON_MOVE_SHIP_LEFT = \"onMoveShipLeft\",\n  ON_MOVE_SHIP_RIGHT = \"onMoveShipRight\",\n  ON_MOVE_SHIP_LEFT_UP = \"onMoveShipLeftUp\",\n  ON_MOVE_SHIP_RIGHT_UP = \"onMoveShipRightUp\",\n  ON_DISABLE_CONTROL_SHIP = \"onDisableControlShip\",\n  ON_ENABLE_CONTROL_SHIP = \"onEnableControlShip\",\n  ON_FIRE_SHIP = \"onFireShip\",\n\n  // Fuel Events\n  ON_RUN_OUT_OF_ENERGY = \"onRunOutOfEnergy\",\n  ADD_FUEL = \"addFuel\",\n\n  // Print Events\n  ON_CREATE_CRYSTAL = \"onCreateCrystal\",\n  ON_START_PRINT_CRYSTAL = \"onStartPrintCrystal\",\n  ON_FINISH_PRINT_CRYSTAL = \"onFinishPrintCrystal\",\n\n  ON_CREATE_POWER = \"onCreatePower\",\n  ON_START_PRINT_POWER = \"onStartPrintPower\",\n  ON_FINISH_PRINT_POWER = \"onFinishPrintPower\",\n\n  ON_SHOW_PRINT_SELECTION = \"onShowPrintSelection\",\n  ON_HIDE_PRINT_SELECTION = \"onHidePrintSelection\",\n  ON_SELECT_LEFT = \"onSelectLeft\",\n  ON_SELECT_RIGHT = \"onSelectRight\",\n  ON_PRINT_ITEM_SELECTED = \"onPrintItemSelected\",\n\n  // Consumable Events\n  ON_DOCK_CRYSTAL = \"onDockCrystal\",\n  ON_HAS_CRYSTAL = \"onHasCrystal\",\n  ON_REMOVE_CRYSTAL = \"onRemoveCrystal\",\n\n  ON_DOCK_POWER = \"onDockPower\",\n  ON_HAS_POWER = \"onHasPower\",\n  ON_REMOVE_POWER = \"onRemovePower\",\n\n  // Mix Machine Events\n  ON_UPLOAD_CRYSTAL = \"onUploadCrystal\",\n  ON_UPLOAD_POWER = \"onUploadPower\",\n\n  ON_UPLOAD_ITEM = \"onUploadItem\",\n  ON_FIRE_UPLOAD_CRYSTAL = \"onFireUploadCrystal\",\n  ON_FIRE_UPLOAD_POWER = \"onFireUploadPower\",\n\n  ON_ENABLE_UPLOAD = \"onEnableUpload\",\n  ON_DISABLE_UPLOAD = \"onDisableUpload\",\n  ON_MIX_START = \"onMixStart\",\n  ON_MIX_FINISH = \"onMixFinish\",\n\n  ON_CREATE_ORB = \"onCreateFuel\",\n  ON_DOCK_ORB = \"onDockFuel\",\n  ON_HAS_ORB = \"onHasFuel\",\n  ON_REMOVE_ORB = \"onRemoveFuel\",\n  ON_COLLIDE_FUEL = \"onCollideFuel\",\n\n  GAME_OVER = \"gameOver\",\n}\n\nexport enum Scenes {\n  INITIAL = \"initial\",\n}\n\ninterface Collider {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}\n\nexport interface CollisionObject {\n  opacity: number;\n  color: number[];\n  colliders: Array<Collider>;\n}\n\nexport enum ConsumableTypes {\n  CRYSTAL = \"crystal\",\n  POWER = \"power\",\n  ORB = \"orb\",\n}\n","import { Vec2 } from \"kaplay\";\nimport { k } from \"../settings/kaplay\";\n\nexport const useBackground = (sprite: string, pos: Vec2, src: string) => {\n  k.loadSprite(sprite, src);\n\n  k.onDraw(() => {\n    k.drawSprite({\n      sprite,\n      pos,\n    });\n  });\n};\n","import { CollisionObject, Objects } from \"../utils/types\";\n\nexport const useColliders = (collisionObject: CollisionObject) => {\n  //Floor\n  collisionObject.colliders.forEach((collider) => {\n    add([\n      rect(collider.width, collider.height),\n      area(),\n      pos(collider.x, collider.y),\n      body({ isStatic: true }),\n      //@ts-ignore\n      color(color[0], color[1], color[2]),\n      opacity(collisionObject.opacity),\n      collider.width > collider.height\n        ? Objects.COLLIDER_GROUND\n        : Objects.COLLIDER,\n    ]);\n  });\n};\n","import { k } from \"../settings/kaplay\";\n\n// Setup post effect\nconst effects = {\n  crt: () => ({\n    u_flatness: 6,\n  }),\n};\n\n// Load all shaders\nfor (const effect in effects) {\n  loadShaderURL(effect, null, `/shaders/${effect}.frag`);\n}\n\nexport const useCustomPostEffect = (key: string, enableOnStart?: boolean) => {\n  k.onLoad(() => {\n    if (enableOnStart) {\n      enableEffect();\n    }\n  });\n\n  k.onKeyPress(key, () => {\n    enableEffect();\n  });\n};\n\nconst enableEffect = () => {\n  const effect = Object.keys(effects)[0];\n  //@ts-ignore\n  usePostEffect(effect, effects[effect]());\n};\n","import { k } from \"../settings/kaplay\";\n\nlet canDebug = false;\n\nexport const useDebugger = (key: string) => {\n  k.onUpdate(() => {\n    debug.inspect = canDebug;\n  });\n\n  onKeyPress(key, () => {\n    canDebug = !canDebug;\n  });\n};\n","import { k } from \"../settings/kaplay\";\n\nexport const useFullScreen = (key: string) => {\n  k.onKeyPress(key, () => {\n    setFullscreen(!isFullscreen());\n  });\n};\n","import { CollisionObject } from \"../../utils/types\";\n\nexport const levelConfig: CollisionObject = {\n  opacity: 0,\n  color: [255, 255, 255],\n  colliders: [\n    { x: 224, y: 256, width: 256, height: 16 },\n    { x: 192, y: 192, width: 16, height: 16 },\n    { x: 352, y: 144, width: 48, height: 16 },\n    { x: 240, y: 80, width: 96, height: 16 },\n    { x: 16, y: 256, width: 144, height: 16 },\n    { x: 0, y: 32, width: 16, height: 224 },\n    { x: 160, y: 32, width: 16, height: 224 },\n    { x: 464, y: 32, width: 16, height: 240 },\n    { x: 176, y: 32, width: 16, height: 176 },\n    { x: 208, y: 192, width: 16, height: 64 },\n    { x: 336, y: 80, width: 16, height: 64 },\n    { x: 240, y: 96, width: 16, height: 48 },\n    { x: 400, y: 144, width: 16, height: 64 },\n    { x: 272, y: 144, width: 16, height: 64 },\n    { x: 16, y: 16, width: 144, height: 16 },\n  ],\n};\n","export const enemyOneConfig = {\n  sliceX: 18,\n  anims: {\n    idle: {\n      from: 0,\n      to: 14,\n      speed: 10,\n      loop: true,\n    },\n    hit: {\n      from: 15,\n      to: 17,\n      speed: 10,\n      loop: false,\n    },\n  },\n};\n\nexport const alertConfig = {\n  sliceX: 21,\n  anims: {\n    idle: {\n      from: 0,\n      to: 20,\n      speed: 10,\n      loop: false,\n    },\n  },\n};\n","import { GameObj, Vec2 as Vector2D } from \"kaplay\";\nimport { k } from \"../../settings/kaplay\";\nimport { Events, Objects } from \"../../utils/types\";\nimport { alertConfig, enemyOneConfig } from \"./config\";\n\nconst ENEMY_SPAWN_DELAY: number = 3;\nconst ENEMY_X_RANGE: number = 60;\n\nlet HP: number = 100;\n\nlet canSpawn: boolean = false;\n\nlet WAVE_COUNTER: number = 0;\n\nexport const getBrain = (position: Vector2D) => {\n  k.loadSprite(Objects.ALERT, \"sprites/alert.png\", alertConfig);\n\n  k.loop(ENEMY_SPAWN_DELAY, () => {\n    if (canSpawn) {\n      getEnemy1(\n        new Vec2(\n          rand(position.x - ENEMY_X_RANGE, position.x + ENEMY_X_RANGE),\n          position.y\n        )\n      );\n\n      WAVE_COUNTER++;\n\n      if (WAVE_COUNTER === 5) {\n        WAVE_COUNTER = 0;\n        canSpawn = false;\n\n        wait(10, () => {\n          canSpawn = true;\n        });\n      }\n    } else {\n      const alert = k.add([\n        sprite(Objects.ALERT),\n        pos(position),\n        anchor(\"center\"),\n        body({ gravityScale: 0.01 }),\n        z(1),\n        opacity(1),\n        Objects.ALERT,\n      ]);\n\n      alert.play(\"idle\");\n\n      alert.onAnimEnd((anim: string) => {\n        if (anim === \"idle\") {\n          alert.destroy();\n          canSpawn = true;\n        }\n      });\n    }\n  });\n};\n\nconst getEnemy1 = (position: Vector2D) => {\n  k.loadSprite(Objects.ENEMY_A, \"sprites/enemy_1.png\", enemyOneConfig);\n\n  const enemy = k.add([\n    sprite(Objects.ENEMY_A),\n    pos(position),\n    anchor(\"center\"),\n    body({ gravityScale: 0.01 }),\n    z(1),\n    opacity(1),\n    area(),\n    Objects.ENEMY_A,\n  ]);\n\n  enemy.onCollide(Objects.PROJECTILE_A, (projectile: GameObj) => {\n    projectile.destroy();\n    enemy.play(\"hit\");\n    HP -= 50;\n\n    if (HP <= 0) {\n      enemy.destroy();\n    }\n  });\n\n  enemy.onCollide(Objects.COLLIDER_GROUND, () => {\n    enemy.trigger(Events.GAME_OVER);\n    enemy.destroy();\n  });\n\n  enemy.onCollide(Objects.SHIP, () => {\n    enemy.trigger(Events.GAME_OVER);\n    enemy.destroy();\n  });\n\n  enemy.onAnimEnd((anim: string) => {\n    if (anim === \"hit\") {\n      enemy.play(\"idle\");\n    }\n  });\n\n  return enemy;\n};\n","import { k } from \"./kaplay\";\n\nexport enum InputMethod {\n  DOWN = \"down\",\n  PRESS = \"press\",\n}\n\nexport const InputConfig = {\n  left: [\"left\", \"a\"],\n  right: [\"right\", \"d\"],\n  up: [\"up\", \"w\"],\n  down: [\"down\", \"s\"],\n  fire: [\"space\", \"e\"],\n};\n\nexport const isKeyHorizontalDown = () => {\n  const horizontalKeys = [...InputConfig.left, ...InputConfig.right];\n  return horizontalKeys.some((key) => k.isKeyDown(key));\n};\n\nexport const isKeyVerticalDown = () => {\n  const verticalKeys = [...InputConfig.up, ...InputConfig.down];\n  return verticalKeys.some((key) => k.isKeyDown(key));\n};\n\nexport const onInput = (\n  onPress: () => void,\n  onRelease: () => void = () => {},\n  type: InputMethod = InputMethod.DOWN,\n  keys: Array<string>\n) => {\n  keys.forEach((key) => {\n    if (type === InputMethod.PRESS) {\n      k.onKeyPress(key, onPress);\n    } else {\n      k.onKeyDown(key, onPress);\n    }\n\n    k.onKeyRelease(key, onRelease);\n  });\n};\n","export const controllerConfig = {\n  sliceX: 4,\n  anims: {\n    idle: {\n      from: 1,\n      to: 1,\n      speed: 20,\n      loop: false,\n    },\n\n    outline: {\n      from: 0,\n      to: 0,\n      speed: 20,\n      loop: false,\n    },\n\n    left: {\n      from: 3,\n      to: 3,\n      speed: 20,\n      loop: false,\n    },\n\n    right: {\n      from: 2,\n      to: 2,\n      speed: 20,\n      loop: false,\n    },\n  },\n};\n","import { Vec2 } from \"kaplay\";\nimport { k } from \"../../settings/kaplay\";\nimport { Events, Objects } from \"../../utils/types\";\nimport { InputConfig, InputMethod, onInput } from \"../../settings/inputs\";\nimport { controllerConfig } from \"./config\";\n\nlet IS_COLLIDING_PLAYER: boolean = false;\n\nexport const getController = (position: Vec2) => {\n  k.loadSprite(Objects.CONTROLLER, \"sprites/controller.png\", controllerConfig);\n\n  const controller = k.add([\n    k.sprite(Objects.CONTROLLER),\n    pos(position),\n    area(),\n    z(0),\n    Objects.CONTROLLER,\n  ]);\n\n  controller.play(\"idle\");\n\n  controller.onCollide(Objects.PLAYER, () => {\n    IS_COLLIDING_PLAYER = true;\n  });\n\n  controller.onCollideEnd(Objects.PLAYER, () => {\n    IS_COLLIDING_PLAYER = false;\n  });\n\n  controller.onCollide(Objects.PLAYER, () => {\n    controller.play(\"outline\");\n  });\n\n  controller.onCollideEnd(Objects.PLAYER, () => {\n    controller.play(\"idle\");\n  });\n\n  k.on(Events.ON_MOVE_SHIP_LEFT, Objects.PLAYER, () => {\n    controller.play(\"left\");\n  });\n\n  k.on(Events.ON_MOVE_SHIP_RIGHT, Objects.PLAYER, () => {\n    controller.play(\"right\");\n  });\n\n  k.on(Events.ON_MOVE_SHIP_RIGHT_UP, Objects.PLAYER, () => {\n    controller.play(\"outline\");\n  });\n\n  k.on(Events.ON_MOVE_SHIP_LEFT_UP, Objects.PLAYER, () => {\n    controller.play(\"outline\");\n  });\n\n  onInput(\n    () => {\n      if (IS_COLLIDING_PLAYER) {\n        controller.trigger(Events.ON_ENABLE_CONTROL_SHIP);\n      }\n    },\n    () => {\n      if (IS_COLLIDING_PLAYER) {\n        controller.play(\"outline\");\n        controller.trigger(Events.ON_DISABLE_CONTROL_SHIP);\n      }\n    },\n    InputMethod.PRESS,\n    InputConfig.fire\n  );\n\n  return controller;\n};\n","export const fuelLineConfig = {\n  sliceX: 18,\n  anims: {\n    idle: {\n      from: 0,\n      to: 0,\n      speed: 10,\n      loop: true,\n    },\n    fuel: {\n      from: 1,\n      to: 17,\n      speed: 8,\n      loop: false,\n    },\n  },\n};\n\nexport const fuelIndicatorConfig = {\n  sliceX: 6,\n  anims: {\n    idle: {\n      from: 0,\n      to: 0,\n      speed: 10,\n      loop: true,\n    },\n    fuel: {\n      from: 1,\n      to: 5,\n      speed: 8,\n      loop: true,\n    },\n  },\n};\n","export const FUEL_DECREASE_DELAY = 5;\nexport const FIRING_DELAY = 0.2;\n","import { Vec2 } from \"kaplay\";\nimport { k } from \"../../settings/kaplay\";\nimport { Events, Objects, Scenes } from \"../../utils/types\";\nimport { fuelIndicatorConfig, fuelLineConfig } from \"./config\";\nimport { FUEL_DECREASE_DELAY } from \"../../utils/constants\";\n\nlet FUEL_NUMBER: number = 5;\nlet CAN_CONSUME_FUEL: boolean = false;\nlet IS_FUEL_EMPTY: boolean = false;\n\nexport const getFuel = (position: Vec2) => {\n  k.loadSprite(Objects.FUEL_LINE, \"sprites/fuel_line.png\", fuelLineConfig);\n  k.loadSprite(\n    Objects.FUEL_CELL_INDICATOR,\n    \"sprites/fuel_indicator.png\",\n    fuelIndicatorConfig\n  );\n  k.loadSprite(Objects.FUEL_CELL_A, \"sprites/fuel_cell.png\");\n  k.loadSprite(Objects.FUEL_CELL_B, \"sprites/fuel_cell.png\");\n  k.loadSprite(Objects.FUEL_CELL_C, \"sprites/fuel_cell.png\");\n  k.loadSprite(Objects.FUEL_CELL_D, \"sprites/fuel_cell.png\");\n  k.loadSprite(Objects.FUEL_CELL_E, \"sprites/fuel_cell_top.png\");\n\n  const fuelIndicator = k.add([\n    k.sprite(Objects.FUEL_CELL_INDICATOR),\n    pos(position),\n    area(),\n    z(1),\n    Objects.FUEL_CELL_INDICATOR,\n  ]);\n\n  const fuelLine = k.add([\n    k.sprite(Objects.FUEL_LINE),\n    pos(191, 197),\n    area(),\n    z(1),\n    Objects.FUEL_LINE,\n  ]);\n\n  k.on(Events.GAME_OVER, Objects.ENEMY_A, () => {\n    IS_FUEL_EMPTY = false;\n    FUEL_NUMBER = 5;\n    k.go(Scenes.INITIAL);\n  });\n\n  fuelIndicator.play(\"idle\");\n\n  fuelLine.onAnimEnd((anim: string) => {\n    if (anim === \"fuel\") {\n      FUEL_NUMBER++;\n      fuelLine.play(\"idle\");\n      IS_FUEL_EMPTY = false;\n    }\n  });\n\n  const cell_A = k.add([\n    k.sprite(Objects.FUEL_CELL_A),\n    pos(position.x + 4, position.y + 30),\n    area(),\n    z(1),\n    Objects.FUEL_CELL_A,\n  ]);\n\n  const cell_B = k.add([\n    k.sprite(Objects.FUEL_CELL_B),\n    pos(position.x + 4, position.y + 23),\n    area(),\n    z(1),\n    Objects.FUEL_CELL_B,\n  ]);\n\n  const cell_C = k.add([\n    k.sprite(Objects.FUEL_CELL_C),\n    pos(position.x + 4, position.y + 16),\n    area(),\n    z(1),\n    Objects.FUEL_CELL_C,\n  ]);\n\n  const cell_D = k.add([\n    k.sprite(Objects.FUEL_CELL_D),\n    pos(position.x + 4, position.y + 9),\n    area(),\n    z(1),\n    Objects.FUEL_CELL_D,\n  ]);\n\n  const cell_E = k.add([\n    k.sprite(Objects.FUEL_CELL_E),\n    pos(position.x + 4, position.y + 3),\n    area(),\n    z(1),\n    Objects.FUEL_CELL_E,\n  ]);\n\n  const fuel_timer = add([timer()]);\n\n  k.on(Events.ON_ENABLE_CONTROL_SHIP, Objects.CONTROLLER, () => {\n    CAN_CONSUME_FUEL = true;\n    fuelIndicator.play(\"fuel\");\n  });\n\n  k.on(Events.ON_DISABLE_CONTROL_SHIP, Objects.CONTROLLER, () => {\n    fuelIndicator.play(\"idle\");\n    CAN_CONSUME_FUEL = false;\n  });\n\n  k.on(Events.ADD_FUEL, Objects.FUEL_MACHINE, () => {\n    if (FUEL_NUMBER < 6) {\n      fuelLine.play(\"fuel\");\n    }\n  });\n\n  fuel_timer.loop(FUEL_DECREASE_DELAY, () => {\n    if (!CAN_CONSUME_FUEL || IS_FUEL_EMPTY) return;\n\n    if (FUEL_NUMBER > 0) {\n      FUEL_NUMBER--;\n    }\n  });\n\n  fuelIndicator.onUpdate(() => {\n    cell_A.hidden = FUEL_NUMBER < 1;\n    cell_B.hidden = FUEL_NUMBER < 2;\n    cell_C.hidden = FUEL_NUMBER < 3;\n    cell_D.hidden = FUEL_NUMBER < 4;\n    cell_E.hidden = FUEL_NUMBER < 5;\n\n    if (FUEL_NUMBER === 0 && !IS_FUEL_EMPTY) {\n      FUEL_NUMBER = 0;\n      fuelIndicator.trigger(Events.ON_RUN_OUT_OF_ENERGY);\n    }\n  });\n};\n","export interface GrassConfig {\n  sliceX: number;\n  anims: {\n    idle: {\n      from: number;\n      to: number;\n      speed: number;\n      loop: boolean;\n    };\n    move: {\n      from: number;\n      to: number;\n      speed: number;\n      loop: boolean;\n    };\n  };\n}\n\nexport const grassConfigA = {\n  sliceX: 4,\n  anims: {\n    idle: {\n      from: 0,\n      to: 0,\n      speed: 20,\n      loop: false,\n    },\n\n    move: {\n      from: 0,\n      to: 3,\n      speed: 20,\n      loop: false,\n    },\n  },\n};\n\nexport const grassConfigB = {\n  sliceX: 5,\n  anims: {\n    idle: {\n      from: 0,\n      to: 0,\n      speed: 20,\n      loop: true,\n    },\n\n    move: {\n      from: 0,\n      to: 4,\n      speed: 20,\n      loop: false,\n    },\n  },\n};\n\nexport const grassConfigC = {\n  sliceX: 5,\n  anims: {\n    idle: {\n      from: 0,\n      to: 0,\n      speed: 20,\n      loop: false,\n    },\n\n    move: {\n      from: 0,\n      to: 4,\n      speed: 20,\n      loop: false,\n    },\n  },\n};\n","import { GameObj, Vec2 } from \"kaplay\";\nimport { k } from \"../../settings/kaplay\";\nimport {\n  GrassConfig,\n  grassConfigA,\n  grassConfigB,\n  grassConfigC,\n} from \"./config\";\n\nexport enum GrassType {\n  A,\n  B,\n  C,\n}\n\nexport const getGrass = (\n  position: Vec2,\n  type: GrassType,\n  player: GameObj,\n  tag: string\n): GameObj => {\n  switch (type) {\n    case GrassType.A:\n      return loadGrass(\n        position,\n        \"sprites/grass_a.png\",\n        grassConfigA,\n        player,\n        tag\n      );\n    case GrassType.B:\n      return loadGrass(\n        position,\n        \"sprites/grass_b.png\",\n        grassConfigB,\n        player,\n        tag\n      );\n\n    case GrassType.C:\n      return loadGrass(\n        position,\n        \"sprites/grass_c.png\",\n        grassConfigC,\n        player,\n        tag\n      );\n  }\n};\n\nconst loadGrass = (\n  position: Vec2,\n  src: string,\n  config: GrassConfig,\n  player: GameObj,\n  tag: string\n) => {\n  k.loadSprite(tag, src, config);\n  const grass = k.add([k.sprite(tag), pos(position), area(), z(1), tag]);\n\n  grass.play(\"idle\");\n\n  player.onCollide(tag, () => {\n    grass.play(\"move\");\n  });\n\n  grass.onAnimEnd((animation) => {\n    if (animation === \"move\") grass.play(\"idle\");\n  });\n\n  return grass;\n};\n","export const printConfig = {\n  sliceX: 11,\n  anims: {\n    idle: {\n      from: 0,\n      to: 0,\n      speed: 10,\n      loop: true,\n    },\n    outline: {\n      from: 1,\n      to: 1,\n      speed: 10,\n      loop: true,\n    },\n    printCrystal: {\n      from: 2,\n      to: 10,\n      speed: 10,\n      loop: false,\n    },\n  },\n};\n","export const progressConfig = {\n  sliceX: 9,\n  anims: {\n    idle: {\n      from: 0,\n      to: 0,\n      speed: 1,\n      loop: false,\n    },\n    progress: {\n      from: 0,\n      to: 8,\n      speed: 7,\n      loop: false,\n    },\n  },\n};\n","import { Vec2 } from \"kaplay\";\nimport { k } from \"../../../settings/kaplay\";\nimport { Objects } from \"../../../utils/types\";\nimport { progressConfig } from \"./config\";\n\nexport const getProgress = (position: Vec2, onFinish: () => void) => {\n  k.loadSprite(Objects.PROGRESS, \"sprites/progress_bar.png\", progressConfig);\n\n  const progress = k.add([\n    k.sprite(Objects.PROGRESS),\n    pos(position),\n    area(),\n    z(0),\n    Objects.PROGRESS,\n  ]);\n\n  progress.hidden = true;\n\n  progress.play(\"idle\");\n\n  progress.onAnimEnd((anim: string) => {\n    if (anim === \"progress\") {\n      onFinish();\n    }\n  });\n\n  return progress;\n};\n","import { k } from \"../../../settings/kaplay\";\nimport { Events, Objects } from \"../../../utils/types\";\nimport { printConfig } from \"./config\";\nimport { InputConfig, InputMethod, onInput } from \"../../../settings/inputs\";\nimport { getProgress } from \"../../ui/progress/progress\";\nimport { Vec2 as Vector2 } from \"kaplay\";\n\nlet canEnablePrint: boolean = false;\nlet canPrint: boolean = true;\n\nexport const getCrystalPrinter = (position: Vector2) => {\n  k.loadSprite(\n    Objects.PRINT_CRYSTAL_MACHINE,\n    \"sprites/print_machine.png\",\n    printConfig\n  );\n\n  const crystal = k.add([\n    k.sprite(Objects.PRINT_CRYSTAL_MACHINE),\n    pos(position),\n    area(),\n    z(0),\n    Objects.PRINT_CRYSTAL_MACHINE,\n  ]);\n\n  const progress = getProgress(\n    new Vec2(crystal.pos.x, crystal.pos.y - 10),\n    () => {\n      progress.hidden = true;\n      crystal.trigger(Events.ON_FINISH_PRINT_CRYSTAL);\n      crystal.play(\"idle\");\n    }\n  );\n\n  crystal.play(\"idle\");\n\n  crystal.onCollide(Objects.PLAYER, () => {\n    canEnablePrint = true;\n    crystal.play(\"outline\");\n  });\n\n  crystal.onCollideEnd(Objects.PLAYER, () => {\n    canEnablePrint = false;\n    crystal.play(\"idle\");\n  });\n\n  k.on(Events.ON_HAS_CRYSTAL, Objects.PLAYER, () => {\n    canPrint = false;\n  });\n\n  k.on(Events.ON_REMOVE_CRYSTAL, Objects.PLAYER, () => {\n    canPrint = true;\n  });\n\n  onInput(\n    () => {\n      if (canEnablePrint && canPrint) {\n        progress.hidden = false;\n        progress.play(\"progress\");\n        crystal.trigger(Events.ON_START_PRINT_CRYSTAL);\n        crystal.play(\"printCrystal\");\n        canPrint = false;\n      }\n    },\n    () => {},\n    InputMethod.PRESS,\n    InputConfig.fire\n  );\n\n  return crystal;\n};\n","export const fuelConfig = {\n  sliceX: 34,\n  anims: {\n    idle: {\n      from: 0,\n      to: 0,\n      speed: 10,\n      loop: true,\n    },\n    outline: {\n      from: 1,\n      to: 1,\n      speed: 10,\n      loop: true,\n    },\n    building: {\n      from: 2,\n      to: 33,\n      speed: 15,\n      loop: false,\n    },\n  },\n};\n","import { Vec2 } from \"kaplay\";\nimport { k } from \"../../../settings/kaplay\";\nimport { Events, Objects } from \"../../../utils/types\";\nimport { fuelConfig } from \"./config\";\nimport { InputConfig, InputMethod, onInput } from \"../../../settings/inputs\";\n\nlet isBuildingFuel: boolean = false;\nlet canAddFuel: boolean = false;\n\nexport const getFuelMachine = (position: Vec2) => {\n  k.loadSprite(Objects.FUEL_MACHINE, \"sprites/fuel_machine.png\", fuelConfig);\n\n  const fuelMachine = k.add([\n    k.sprite(Objects.FUEL_MACHINE),\n    pos(position),\n    area(),\n    area({\n      shape: new Rect(vec2(0, 20), 20, 40),\n    }),\n    z(0),\n    Objects.FUEL_MACHINE,\n  ]);\n\n  fuelMachine.play(\"idle\");\n\n  fuelMachine.onCollide(Objects.PLAYER, () => {\n    if (!isBuildingFuel) fuelMachine.play(\"outline\");\n  });\n\n  fuelMachine.onCollideEnd(Objects.PLAYER, () => {\n    if (!isBuildingFuel) fuelMachine.play(\"idle\");\n  });\n\n  k.on(Events.ON_COLLIDE_FUEL, Objects.PLAYER, (_, args) => {\n    const { colliding, hasOrb } = args;\n    if (colliding && hasOrb) canAddFuel = true;\n    else canAddFuel = false;\n  });\n\n  k.on(Events.ADD_FUEL, Objects.FUEL_MACHINE, () => {\n    isBuildingFuel = true;\n    fuelMachine.play(\"building\");\n  });\n\n  fuelMachine.onAnimEnd((anim: string) => {\n    if (anim === \"building\") {\n      isBuildingFuel = false;\n      fuelMachine.play(\"idle\");\n    }\n  });\n\n  onInput(\n    () => {\n      if (canAddFuel) {\n        canAddFuel = false;\n        fuelMachine.trigger(Events.ADD_FUEL);\n      }\n    },\n    () => {},\n    InputMethod.PRESS,\n    InputConfig.fire\n  );\n\n  return fuelMachine;\n};\n","export const mixConfig = {\n  sliceX: 11,\n  anims: {\n    idle: {\n      from: 0,\n      to: 0,\n      speed: 10,\n      loop: true,\n    },\n    outline: {\n      from: 1,\n      to: 1,\n      speed: 10,\n      loop: true,\n    },\n    building: {\n      from: 2,\n      to: 10,\n      speed: 15,\n      loop: true,\n    },\n  },\n};\n","export const consumableConfig = {\n  sliceX: 30,\n  anims: {\n    idle: {\n      from: 1,\n      to: 29,\n      speed: 10,\n      loop: true,\n    },\n    outline: {\n      from: 0,\n      to: 0,\n      speed: 10,\n      loop: true,\n    },\n  },\n};\n","import { k } from \"../../../settings/kaplay\";\nimport { Events, Objects } from \"../../../utils/types\";\nimport { mixConfig } from \"./config\";\nimport { InputConfig, InputMethod, onInput } from \"../../../settings/inputs\";\nimport { getProgress } from \"../../ui/progress/progress\";\nimport { Vec2 as Vector2D } from \"kaplay\";\nimport { consumableConfig } from \"../../crystal/config\";\n\nlet canUploadItem: boolean = false;\nlet hasCrystal: boolean = false;\nlet hasPower: boolean = false;\n\nexport const getMixMachine = (position: Vector2D) => {\n  k.loadSprite(Objects.MIX_MACHINE, \"sprites/mix_machine.png\", mixConfig);\n  k.loadSprite(Objects.MIX_DISPLAY, \"sprites/ItemDisplay.png\");\n  k.loadSprite(Objects.CRYSTAL, \"sprites/crystal.png\", consumableConfig);\n  k.loadSprite(Objects.POWER, \"sprites/power.png\", consumableConfig);\n\n  //Load Image\n  k.add([\n    k.sprite(Objects.MIX_DISPLAY),\n    pos(position.x + 36, position.y - 10),\n    area(),\n    z(0),\n    Objects.MIX_DISPLAY,\n  ]);\n\n  const mixMachine = k.add([\n    k.sprite(Objects.MIX_MACHINE),\n    pos(position),\n    area(),\n    z(0),\n    Objects.MIX_MACHINE,\n  ]);\n\n  const crystal = k.add([\n    k.sprite(Objects.CRYSTAL),\n    pos(position.x + 37, position.y - 9),\n    area(),\n    z(0),\n    Objects.CRYSTAL,\n  ]);\n\n  const power = k.add([\n    k.sprite(Objects.POWER),\n    pos(position.x + 52, position.y - 9),\n    area(),\n    z(0),\n    Objects.CRYSTAL,\n  ]);\n\n  const progress = getProgress(new Vec2(position.x, position.y - 10), () => {\n    progress.hidden = true;\n    crystal.hidden = true;\n    power.hidden = true;\n\n    mixMachine.trigger(Events.ON_MIX_FINISH);\n  });\n\n  crystal.hidden = true;\n  power.hidden = true;\n\n  crystal.play(\"idle\");\n  power.play(\"idle\");\n\n  mixMachine.play(\"idle\");\n\n  mixMachine.onCollide(Objects.PLAYER, () => {\n    canUploadItem = true;\n    mixMachine.play(\"outline\");\n    mixMachine.trigger(Events.ON_ENABLE_UPLOAD);\n  });\n\n  mixMachine.onCollideEnd(Objects.PLAYER, () => {\n    canUploadItem = false;\n    mixMachine.play(\"idle\");\n    mixMachine.trigger(Events.ON_DISABLE_UPLOAD);\n  });\n\n  k.on(Events.ON_UPLOAD_CRYSTAL, Objects.PLAYER, () => {\n    if (!hasCrystal) {\n      crystal.hidden = false;\n      hasCrystal = true;\n    }\n  });\n\n  k.on(Events.ON_UPLOAD_POWER, Objects.PLAYER, () => {\n    if (!hasPower) {\n      power.hidden = false;\n      hasPower = true;\n    }\n  });\n\n  k.on(Events.ON_UPLOAD_ITEM, Objects.MIX_MACHINE, () => {\n    if (hasCrystal && hasPower) {\n      hasPower = false;\n      hasCrystal = false;\n\n      progress.hidden = false;\n\n      progress.play(\"progress\");\n      mixMachine.play(\"building\");\n\n      mixMachine.trigger(Events.ON_MIX_START);\n    }\n  });\n\n  onInput(\n    () => {\n      if (canUploadItem) {\n        mixMachine.trigger(Events.ON_UPLOAD_ITEM, {\n          crystalLocked: hasCrystal,\n          powerLocked: hasPower,\n        });\n      }\n    },\n    () => {},\n    InputMethod.PRESS,\n    InputConfig.fire\n  );\n\n  return mixMachine;\n};\n","export const printConfig = {\n  sliceX: 11,\n  anims: {\n    idle: {\n      from: 0,\n      to: 0,\n      speed: 10,\n      loop: true,\n    },\n    outline: {\n      from: 1,\n      to: 1,\n      speed: 10,\n      loop: true,\n    },\n    printPower: {\n      from: 2,\n      to: 10,\n      speed: 10,\n      loop: false,\n    },\n  },\n};\n","import { Vec2 as Vector2D } from \"kaplay\";\nimport { k } from \"../../../settings/kaplay\";\nimport { Events, Objects } from \"../../../utils/types\";\nimport { printConfig } from \"./config\";\nimport { InputConfig, InputMethod, onInput } from \"../../../settings/inputs\";\nimport { getProgress } from \"../../ui/progress/progress\";\n\nlet canEnablePrint: boolean = false;\nlet canPrint: boolean = true;\n\nexport const getPowerPrinter = (position: Vector2D) => {\n  k.loadSprite(\n    Objects.PRINT_POWER_MACHINE,\n    \"sprites/print_machine_2.png\",\n    printConfig\n  );\n\n  const power = k.add([\n    k.sprite(Objects.PRINT_POWER_MACHINE),\n    pos(position),\n    area(),\n    z(0),\n    Objects.PRINT_POWER_MACHINE,\n  ]);\n\n  const progress = getProgress(new Vec2(power.pos.x, power.pos.y - 10), () => {\n    progress.hidden = true;\n    power.trigger(Events.ON_FINISH_PRINT_POWER);\n    power.play(\"idle\");\n  });\n\n  power.play(\"idle\");\n\n  power.onCollide(Objects.PLAYER, () => {\n    canEnablePrint = true;\n    power.play(\"outline\");\n  });\n\n  power.onCollideEnd(Objects.PLAYER, () => {\n    canEnablePrint = false;\n    power.play(\"idle\");\n  });\n\n  k.on(Events.ON_HAS_POWER, Objects.PLAYER, () => {\n    canPrint = false;\n  });\n\n  k.on(Events.ON_REMOVE_POWER, Objects.PLAYER, () => {\n    canPrint = true;\n  });\n\n  onInput(\n    () => {\n      if (canEnablePrint && canPrint) {\n        progress.hidden = false;\n        progress.play(\"progress\");\n        power.trigger(Events.ON_START_PRINT_POWER);\n        power.play(\"printPower\");\n        canPrint = false;\n      }\n    },\n    () => {},\n    InputMethod.DOWN,\n    InputConfig.fire\n  );\n  return power;\n};\n","export const playerConfig = {\n  sliceX: 23,\n  anims: {\n    run: {\n      from: 0,\n      to: 8,\n      speed: 20,\n      loop: true,\n    },\n\n    idle: {\n      from: 9,\n      to: 12,\n      speed: 8,\n      loop: true,\n    },\n\n    up: {\n      from: 13,\n      to: 18,\n      speed: 20,\n      loop: true,\n    },\n\n    up_idle: {\n      from: 19,\n      to: 22,\n      speed: 8,\n      loop: true,\n    },\n  },\n};\n","import { GameObj, Vec2 as V2 } from \"kaplay\";\nimport { k } from \"../../settings/kaplay\";\nimport { Events, Objects } from \"../../utils/types\";\nimport { consumableConfig } from \"./config\";\nimport { InputConfig, InputMethod, onInput } from \"../../settings/inputs\";\n\nlet canDock: boolean = false;\nlet collidedObj: GameObj;\n\nexport const getCrystal = (position: V2) => {\n  k.loadSprite(Objects.CRYSTAL, \"sprites/crystal.png\", consumableConfig);\n\n  const consumable = k.add([\n    sprite(Objects.CRYSTAL),\n    pos(position),\n    z(2),\n    area(),\n    body(),\n    anchor(\"bot\"),\n    Objects.CRYSTAL,\n  ]);\n\n  consumable.play(\"idle\");\n\n  consumable.onCollide(Objects.COLLIDER_GROUND, (obj: GameObj) => {\n    const lastPosition = new Vec2(consumable.pos.x, obj.pos.y);\n    consumable.destroy();\n    getConsumableGround(lastPosition, Objects.CRYSTAL);\n  });\n\n  return consumable;\n};\n\nconst getConsumableGround = (position: V2, type: any) => {\n  const consumable = k.add([\n    sprite(type),\n    pos(position),\n    z(2),\n    area(),\n    body({ isStatic: true }),\n    anchor(\"bot\"),\n    platformEffector({}),\n    type,\n  ]);\n\n  consumable.play(\"idle\");\n\n  k.onCollide(type, Objects.PLAYER, (obj: GameObj) => {\n    obj.play(\"outline\");\n    canDock = true;\n    collidedObj = obj;\n  });\n\n  k.onCollideEnd(type, Objects.PLAYER, (obj: GameObj) => {\n    obj.play(\"idle\");\n    canDock = false;\n  });\n\n  onInput(\n    () => {\n      if (canDock && collidedObj) {\n        k.destroy(collidedObj);\n        consumable.trigger(Events.ON_DOCK_CRYSTAL);\n        canDock = false;\n      }\n    },\n    () => {},\n    InputMethod.PRESS,\n    InputConfig.fire\n  );\n};\n","export const consumableConfig = {\n  sliceX: 30,\n  anims: {\n    idle: {\n      from: 1,\n      to: 29,\n      speed: 10,\n      loop: true,\n    },\n    outline: {\n      from: 0,\n      to: 0,\n      speed: 10,\n      loop: true,\n    },\n  },\n};\n","import { GameObj, Vec2 as V2 } from \"kaplay\";\nimport { k } from \"../../settings/kaplay\";\nimport { Events, Objects } from \"../../utils/types\";\nimport { consumableConfig } from \"./config\";\nimport { InputConfig, InputMethod, onInput } from \"../../settings/inputs\";\n\nlet canDock: boolean = false;\nlet collidedObj: GameObj;\n\nexport const getPower = (position: V2) => {\n  k.loadSprite(Objects.POWER, \"sprites/power.png\", consumableConfig);\n\n  const consumable = k.add([\n    sprite(Objects.POWER),\n    pos(position),\n    z(2),\n    area(),\n    body(),\n    anchor(\"bot\"),\n    Objects.POWER,\n  ]);\n\n  consumable.play(\"idle\");\n\n  consumable.onCollide(Objects.COLLIDER_GROUND, (obj: GameObj) => {\n    const lastPosition = new Vec2(consumable.pos.x, obj.pos.y);\n    consumable.destroy();\n    getConsumableGround(lastPosition, Objects.POWER);\n  });\n\n  return consumable;\n};\n\nconst getConsumableGround = (position: V2, type: any) => {\n  const consumable = k.add([\n    sprite(type),\n    pos(position),\n    z(2),\n    area(),\n    body({ isStatic: true }),\n    anchor(\"bot\"),\n    platformEffector({}),\n    type,\n  ]);\n\n  consumable.play(\"idle\");\n\n  k.onCollide(type, Objects.PLAYER, (obj: GameObj) => {\n    obj.play(\"outline\");\n    canDock = true;\n    collidedObj = obj;\n  });\n\n  k.onCollideEnd(type, Objects.PLAYER, (obj: GameObj) => {\n    obj.play(\"idle\");\n    canDock = false;\n  });\n\n  onInput(\n    () => {\n      if (canDock && collidedObj) {\n        k.destroy(collidedObj);\n        consumable.trigger(Events.ON_DOCK_POWER);\n        canDock = false;\n      }\n    },\n    () => {},\n    InputMethod.PRESS,\n    InputConfig.fire\n  );\n};\n","export const orbConfig = {\n  sliceX: 17,\n  anims: {\n    idle: {\n      from: 1,\n      to: 16,\n      speed: 10,\n      loop: true,\n    },\n    outline: {\n      from: 0,\n      to: 0,\n      speed: 10,\n      loop: true,\n    },\n  },\n};\n","import { GameObj, Vec2 as V2 } from \"kaplay\";\nimport { orbConfig } from \"./config\";\nimport { ConsumableTypes, Events, Objects } from \"../../utils/types\";\nimport { k } from \"../../settings/kaplay\";\nimport { InputConfig, InputMethod, onInput } from \"../../settings/inputs\";\n\nlet canDock: boolean = false;\nlet collidedObj: GameObj;\n\nexport const getOrb = (position: V2) => {\n  k.loadSprite(ConsumableTypes.ORB, \"sprites/fuel.png\", orbConfig);\n\n  const consumable = k.add([\n    sprite(ConsumableTypes.ORB),\n    pos(position),\n    z(2),\n    area(),\n    body(),\n    anchor(\"bot\"),\n    ConsumableTypes.ORB,\n  ]);\n\n  consumable.play(\"idle\");\n\n  consumable.onCollide(Objects.COLLIDER_GROUND, (obj: GameObj) => {\n    const lastPosition = new Vec2(consumable.pos.x, obj.pos.y);\n    consumable.destroy();\n    getConsumableGround(lastPosition, ConsumableTypes.ORB);\n  });\n\n  return consumable;\n};\n\nconst getConsumableGround = (position: V2, type: any) => {\n  const consumable = k.add([\n    sprite(type),\n    pos(position),\n    z(2),\n    area(),\n    body({ isStatic: true }),\n    anchor(\"bot\"),\n    platformEffector({}),\n    type,\n  ]);\n\n  consumable.play(\"idle\");\n\n  k.onCollide(type, Objects.PLAYER, (obj: GameObj) => {\n    obj.play(\"outline\");\n    canDock = true;\n    collidedObj = obj;\n  });\n\n  k.onCollideEnd(type, Objects.PLAYER, (obj: GameObj) => {\n    obj.play(\"idle\");\n    canDock = false;\n  });\n\n  onInput(\n    () => {\n      if (canDock && collidedObj) {\n        k.destroy(collidedObj);\n        consumable.trigger(Events.ON_DOCK_ORB);\n        canDock = false;\n      }\n    },\n    () => {},\n    InputMethod.PRESS,\n    InputConfig.fire\n  );\n};\n","import { GameObj, Vec2 } from \"kaplay\";\nimport {\n  InputConfig,\n  InputMethod,\n  isKeyHorizontalDown,\n  isKeyVerticalDown,\n  onInput,\n} from \"../../settings/inputs\";\nimport { k } from \"../../settings/kaplay\";\nimport { ConsumableTypes, Events, Objects } from \"../../utils/types\";\nimport { playerConfig } from \"./config\";\nimport { consumableConfig } from \"../crystal/config\";\nimport { getCrystal } from \"../crystal/crytal\";\nimport { getPower } from \"../power/power\";\nimport { orbConfig } from \"../orb/config\";\nimport { getOrb } from \"../orb/orb\";\n\nconst SPEED = 150;\nconst THROW_FORCE = 6000;\n\n// Movement Flags\nlet canMoveHorizontally: boolean = false;\nlet canMoveVertically: boolean = false;\nlet canMove: boolean = true;\nlet direction: boolean = true;\n\n// Ship Control Flag\nlet canControlShip: boolean = false;\n\n// Consumable Flag\nlet hasCrystal: boolean = false;\nlet hasPower: boolean = false;\nlet hasOrb: boolean = false;\n\n// Upload Flag\nlet canUploadItem: boolean = false;\n\nexport function getPlayer(position: Vec2): GameObj {\n  k.loadSprite(Objects.PLAYER, \"sprites/player.png\", playerConfig);\n  k.loadSprite(Objects.CRYSTAL, \"sprites/crystal.png\", consumableConfig);\n  k.loadSprite(Objects.POWER, \"sprites/power.png\", consumableConfig);\n  k.loadSprite(ConsumableTypes.ORB, \"sprites/fuel.png\", orbConfig);\n\n  const player = k.add([\n    k.sprite(Objects.PLAYER),\n    pos(position),\n    anchor(\"bot\"),\n    area({\n      shape: new Rect(vec2(0, 0), 8, 16),\n    }),\n    body(),\n    z(1),\n    Objects.PLAYER,\n  ]);\n\n  player.play(\"idle\");\n\n  handleAnimation(player);\n  handleVerticalMovement(player);\n  handleHorizontalMovement(player);\n  handleController();\n  handlePrintCrystal();\n  handlePrintPower();\n  handleCrystal(player);\n  handlePower(player);\n  handleOrb(player);\n  handleUploadItem(player);\n\n  return player;\n}\n\nconst handleUploadItem = (player: GameObj) => {\n  k.on(Events.ON_MIX_START, Objects.MIX_MACHINE, () => {\n    canMove = false;\n  });\n\n  k.on(Events.ON_MIX_FINISH, Objects.MIX_MACHINE, () => {\n    canMove = true;\n    hasCrystal = false;\n    hasPower = false;\n    canUploadItem = false;\n  });\n\n  k.on(Events.ON_ENABLE_UPLOAD, Objects.MIX_MACHINE, () => {\n    canUploadItem = true;\n  });\n\n  k.on(Events.ON_DISABLE_UPLOAD, Objects.MIX_MACHINE, () => {\n    canUploadItem = false;\n  });\n\n  k.on(Events.ON_UPLOAD_ITEM, Objects.MIX_MACHINE, (_, args) => {\n    const { crystalLocked, powerLocked } = args;\n\n    if (hasCrystal && !crystalLocked) {\n      player.trigger(Events.ON_UPLOAD_CRYSTAL);\n      player.trigger(Events.ON_REMOVE_CRYSTAL);\n    }\n    if (hasPower && !powerLocked) {\n      player.trigger(Events.ON_UPLOAD_POWER);\n      player.trigger(Events.ON_REMOVE_POWER);\n    }\n  });\n};\n\nconst handleOrb = (player: GameObj) => {\n  const orb = k.add([\n    k.sprite(ConsumableTypes.ORB),\n    pos(player.pos.x, player.pos.y - 16),\n    anchor(\"bot\"),\n    area(),\n    z(1),\n    ConsumableTypes.ORB,\n  ]);\n\n  orb.parent = player;\n  orb.hidden = true;\n\n  player.onUpdate(() => {\n    orb.pos = player.pos.sub(0, 16);\n  });\n\n  k.on(Events.ON_DOCK_ORB, ConsumableTypes.ORB, () => {\n    player.trigger(Events.ON_HAS_ORB);\n    hasOrb = true;\n    orb.hidden = false;\n  });\n\n  k.on(Events.ON_MIX_FINISH, Objects.MIX_MACHINE, () => {\n    hasOrb = true;\n    orb.hidden = false;\n    player.trigger(Events.ON_HAS_ORB);\n  });\n\n  k.on(Events.ADD_FUEL, Objects.FUEL_MACHINE, () => {\n    hasOrb = false;\n    orb.hidden = true;\n  });\n\n  player.onCollide(Objects.FUEL_MACHINE, () => {\n    if (hasOrb) {\n      canUploadItem = true;\n    }\n    player.trigger(Events.ON_COLLIDE_FUEL, {\n      colliding: true,\n      hasOrb,\n    });\n  });\n\n  player.onCollideEnd(Objects.FUEL_MACHINE, () => {\n    canUploadItem = false;\n    player.trigger(Events.ON_COLLIDE_FUEL, {\n      colliding: false,\n      hasOrb,\n    });\n  });\n\n  onInput(\n    () => {\n      if (hasOrb && !canUploadItem) {\n        canUploadItem = false;\n        player.trigger(Events.ON_REMOVE_ORB);\n        hasOrb = false;\n        orb.hidden = true;\n\n        const newOrb = getOrb(orb.pos);\n\n        newOrb.addForce(\n          vec2(direction ? THROW_FORCE : -THROW_FORCE, -THROW_FORCE)\n        );\n      }\n    },\n    () => {},\n    InputMethod.PRESS,\n    InputConfig.fire\n  );\n};\n\nconst handlePower = (player: GameObj) => {\n  const power = k.add([\n    k.sprite(Objects.POWER),\n    pos(player.pos.x, player.pos.y - 16),\n    anchor(\"bot\"),\n    area(),\n    z(1),\n    Objects.POWER,\n  ]);\n\n  power.parent = player;\n  power.hidden = true;\n\n  player.onUpdate(() => {\n    power.pos = player.pos.sub(0, 16);\n  });\n\n  power.play(\"idle\");\n\n  k.on(Events.ON_DOCK_POWER, ConsumableTypes.POWER, () => {\n    player.trigger(Events.ON_HAS_POWER);\n    hasPower = true;\n    power.hidden = false;\n  });\n\n  k.on(Events.ON_FINISH_PRINT_POWER, Objects.PRINT_POWER_MACHINE, () => {\n    hasPower = true;\n    power.hidden = false;\n  });\n\n  k.on(Events.ON_UPLOAD_POWER, Objects.PLAYER, () => {\n    hasPower = false;\n    power.hidden = true;\n  });\n\n  onInput(\n    () => {\n      if (hasPower && !canUploadItem) {\n        player.trigger(Events.ON_REMOVE_POWER);\n        hasPower = false;\n        power.hidden = true;\n\n        const newPower = getPower(power.pos);\n\n        newPower.addForce(\n          vec2(direction ? THROW_FORCE : -THROW_FORCE, -THROW_FORCE)\n        );\n      }\n    },\n    () => {},\n    InputMethod.PRESS,\n    InputConfig.fire\n  );\n};\n\nconst handleCrystal = (player: GameObj) => {\n  const crystal = k.add([\n    k.sprite(Objects.CRYSTAL),\n    pos(player.pos.x, player.pos.y - 16),\n    anchor(\"bot\"),\n    area(),\n    z(1),\n    Objects.CRYSTAL,\n  ]);\n\n  crystal.parent = player;\n  crystal.hidden = true;\n\n  player.onUpdate(() => {\n    crystal.pos = player.pos.sub(0, 16);\n  });\n\n  crystal.play(\"idle\");\n\n  k.on(Events.ON_DOCK_CRYSTAL, ConsumableTypes.CRYSTAL, () => {\n    player.trigger(Events.ON_HAS_CRYSTAL);\n    hasCrystal = true;\n    crystal.hidden = false;\n  });\n\n  k.on(Events.ON_FINISH_PRINT_CRYSTAL, Objects.PRINT_CRYSTAL_MACHINE, () => {\n    hasCrystal = true;\n    crystal.hidden = false;\n  });\n\n  k.on(Events.ON_UPLOAD_CRYSTAL, Objects.PLAYER, () => {\n    hasCrystal = false;\n    crystal.hidden = true;\n  });\n\n  onInput(\n    () => {\n      if (hasCrystal && !canUploadItem) {\n        player.trigger(Events.ON_REMOVE_CRYSTAL);\n        hasCrystal = false;\n        crystal.hidden = true;\n\n        const newCrystal = getCrystal(crystal.pos);\n\n        newCrystal.addForce(\n          vec2(direction ? THROW_FORCE : -THROW_FORCE, -THROW_FORCE)\n        );\n      }\n    },\n    () => {},\n    InputMethod.PRESS,\n    InputConfig.fire\n  );\n};\n\nconst handlePrintPower = () => {\n  k.on(Events.ON_START_PRINT_POWER, Objects.PRINT_POWER_MACHINE, () => {\n    canMove = false;\n  });\n\n  k.on(Events.ON_FINISH_PRINT_POWER, Objects.PRINT_POWER_MACHINE, () => {\n    canMove = true;\n  });\n};\n\nconst handlePrintCrystal = () => {\n  k.on(Events.ON_START_PRINT_CRYSTAL, Objects.PRINT_CRYSTAL_MACHINE, () => {\n    canMove = false;\n  });\n\n  k.on(Events.ON_FINISH_PRINT_CRYSTAL, Objects.PRINT_CRYSTAL_MACHINE, () => {\n    canMove = true;\n  });\n};\n\n/**\n * This function handles the controller object\n * @param player Player Game Object\n */\nconst handleController = () => {\n  k.on(Events.ON_ENABLE_CONTROL_SHIP, Objects.CONTROLLER, () => {\n    if (!hasCrystal) canControlShip = true;\n  });\n\n  k.on(Events.ON_DISABLE_CONTROL_SHIP, Objects.CONTROLLER, () => {\n    canControlShip = false;\n  });\n};\n\nconst handleAnimation = (player: GameObj) => {\n  // Vertical Movement\n  onInput(\n    () => {\n      if (canMoveVertically) player.play(\"up\");\n    },\n    () => {\n      if (!isKeyVerticalDown() && canMoveVertically) player.play(\"up_idle\");\n    },\n    InputMethod.PRESS,\n    [...InputConfig.up, ...InputConfig.down]\n  );\n\n  // Horizontal Movement\n  onInput(\n    () => {\n      if (\n        player.isGrounded() &&\n        !canMoveVertically &&\n        !canControlShip &&\n        canMove\n      )\n        player.play(\"run\");\n    },\n    () => {\n      if (!isKeyHorizontalDown() && !canMoveVertically) {\n        player.play(\"idle\");\n      }\n    },\n    InputMethod.PRESS,\n    [...InputConfig.left, ...InputConfig.right]\n  );\n\n  player.onCollideEnd(Objects.STAIR, () => {\n    if (isKeyHorizontalDown()) player.play(\"run\");\n    else player.play(\"idle\");\n  });\n\n  player.onCollide(Objects.STAIR, () => {\n    if (isKeyVerticalDown()) player.play(\"up\");\n    else player.play(\"up_idle\");\n  });\n\n  player.onCollide(Objects.CONTROLLER, () => {\n    if (canControlShip) player.play(\"idle\");\n  });\n};\n\nconst handleVerticalMovement = (player: GameObj) => {\n  player.onCollide(Objects.STAIR, () => {\n    canMoveVertically = true;\n    player.gravityScale = 0;\n  });\n\n  player.onCollideEnd(Objects.STAIR, () => {\n    canMoveVertically = false;\n    player.gravityScale = 1;\n  });\n\n  // UP\n  onInput(\n    () => {\n      if (canMoveVertically) {\n        player.move(0, -SPEED);\n      }\n    },\n    () => {},\n    InputMethod.DOWN,\n    InputConfig.up\n  );\n\n  // DOWN\n  onInput(\n    () => {\n      player.move(0, SPEED);\n    },\n    () => {},\n    InputMethod.DOWN,\n    InputConfig.down\n  );\n};\n\nexport const handleHorizontalMovement = (player: GameObj) => {\n  // LEFT\n  onInput(\n    () => {\n      if (canControlShip) {\n        player.trigger(Events.ON_MOVE_SHIP_LEFT);\n        if (!canMoveHorizontally) {\n          player.play(\"idle\");\n          canMoveHorizontally = true;\n        }\n      } else {\n        if (canMove) {\n          player.move(-SPEED, 0);\n          player.flipX = true;\n          direction = false;\n        }\n      }\n    },\n    () => {\n      if (canControlShip) player.trigger(Events.ON_MOVE_SHIP_LEFT_UP);\n      canMoveHorizontally = false;\n    },\n    InputMethod.DOWN,\n    InputConfig.left\n  );\n\n  // RIGHT\n  onInput(\n    () => {\n      if (canControlShip) {\n        player.trigger(Events.ON_MOVE_SHIP_RIGHT);\n        if (!canMoveHorizontally) {\n          player.play(\"idle\");\n          canMoveHorizontally = true;\n        }\n      } else {\n        if (canMove) {\n          player.move(SPEED, 0);\n          direction = true;\n          player.flipX = false;\n        }\n      }\n    },\n    () => {\n      if (canControlShip) player.trigger(Events.ON_MOVE_SHIP_RIGHT_UP);\n      canMoveHorizontally = false;\n    },\n    InputMethod.DOWN,\n    InputConfig.right\n  );\n};\n","export enum ProjectileTypes {\n  A = \"projectile_a\",\n  B = \"projectile_b\",\n}\n","import { Vec2 } from \"kaplay\";\nimport { k } from \"../../settings/kaplay\";\nimport { Objects } from \"../../utils/types\";\nimport { ProjectileTypes } from \"./config\";\n\nexport const getProjectile = (\n  speed: number,\n  position: Vec2,\n  projectile: ProjectileTypes\n) => {\n  switch (projectile) {\n    case ProjectileTypes.A:\n      k.loadSprite(projectile, \"sprites/projectile_a.png\");\n      break;\n    case ProjectileTypes.B:\n      k.loadSprite(projectile, \"sprites/projectile_b.png\");\n      break;\n    default:\n      break;\n  }\n\n  const proj = k.add([\n    k.sprite(projectile),\n    pos(position.x, position.y),\n    area(),\n    body(),\n    move(UP, speed),\n    z(1),\n    projectile,\n  ]);\n\n  proj.gravityScale = 0;\n\n  proj.onCollide(Objects.COLLIDER_GROUND, () => {\n    proj.destroy();\n  });\n\n  return proj;\n};\n","export enum ShipFiringTypes {\n  A = \"fire_a\",\n  B = \"fire_b\",\n}\n\nexport const shipConfig = {\n  sliceX: 12,\n  anims: {\n    idle: {\n      from: 0,\n      to: 2,\n      speed: 10,\n      loop: true,\n    },\n\n    fire_a: {\n      from: 3,\n      to: 8,\n      speed: 15,\n      loop: true,\n    },\n\n    fire_b: {\n      from: 9,\n      to: 11,\n      speed: 15,\n      loop: true,\n    },\n  },\n};\n","import { Vec2 } from \"kaplay\";\nimport { k } from \"../../settings/kaplay\";\nimport { FIRING_DELAY } from \"../../utils/constants\";\nimport { Events, Objects } from \"../../utils/types\";\nimport { ProjectileTypes } from \"../projectile/config\";\nimport { getProjectile } from \"../projectile/projectile\";\nimport { shipConfig, ShipFiringTypes } from \"./config\";\n\nconst SPEED = 150;\n\nconst FIRE_TYPE = ShipFiringTypes.A;\nlet IS_FIRING: boolean = false;\nlet FIRE_DIRECTION: boolean = false;\nlet CAN_FIRE: boolean = true;\n\nexport const getShip = (position: Vec2) => {\n  k.loadSprite(Objects.SHIP, \"sprites/spaceship.png\", shipConfig);\n\n  const ship = k.add([\n    k.sprite(Objects.SHIP),\n    pos(position),\n    area(),\n    body(),\n    z(1),\n    Objects.SHIP,\n  ]);\n\n  ship.play(\"idle\");\n\n  ship.gravityScale = 0;\n\n  const firing_timer = add([timer()]);\n\n  firing_timer.loop(FIRING_DELAY, () => {\n    if (IS_FIRING && CAN_FIRE) {\n      FIRE_DIRECTION = !FIRE_DIRECTION;\n\n      if (FIRE_DIRECTION) {\n        getProjectile(\n          SPEED,\n          vec2(ship.pos.x + 7, ship.pos.y - 6),\n          ProjectileTypes.A\n        );\n      } else {\n        getProjectile(\n          SPEED,\n          vec2(ship.pos.x + 25, ship.pos.y - 6),\n          ProjectileTypes.A\n        );\n      }\n    }\n  });\n\n  k.on(Events.ON_RUN_OUT_OF_ENERGY, Objects.FUEL_CELL_INDICATOR, () => {\n    CAN_FIRE = false;\n    ship.play(\"idle\");\n  });\n\n  k.on(Events.ADD_FUEL, Objects.FUEL_MACHINE, () => {\n    CAN_FIRE = true;\n  });\n\n  k.on(Events.ON_ENABLE_CONTROL_SHIP, Objects.CONTROLLER, () => {\n    if (CAN_FIRE) {\n      IS_FIRING = true;\n      ship.play(FIRE_TYPE);\n    }\n  });\n\n  k.on(Events.ON_DISABLE_CONTROL_SHIP, Objects.CONTROLLER, () => {\n    IS_FIRING = false;\n    ship.play(\"idle\");\n  });\n\n  k.on(Events.ON_MOVE_SHIP_LEFT, Objects.PLAYER, () => {\n    ship.move(-SPEED, 0);\n  });\n\n  k.on(Events.ON_MOVE_SHIP_RIGHT, Objects.PLAYER, () => {\n    ship.move(SPEED, 0);\n  });\n\n  return ship;\n};\n","import { Vec2 } from \"kaplay\";\nimport { k } from \"../../settings/kaplay\";\nimport { Objects } from \"../../utils/types\";\n\nexport const getStair = (position: Vec2, src: string) => {\n  k.loadSprite(Objects.STAIR, src);\n\n  return k.add([\n    k.sprite(Objects.STAIR),\n    pos(position),\n    area(),\n    z(0),\n    Objects.STAIR,\n  ]);\n};\n","export const starsConfig = {\n  sliceX: 7,\n  anims: {\n    idle: {\n      from: 0,\n      to: 0,\n      speed: 10,\n      loop: true,\n    },\n  },\n};\n","import { Vec2 as V2 } from \"kaplay\";\nimport { k } from \"../../settings/kaplay\";\nimport { Objects } from \"../../utils/types\";\nimport { starsConfig } from \"./config\";\n\nconst PARTICLE_RANGE = 60;\n\nexport const getStarts = (position: V2) => {\n  k.loadSprite(Objects.STARS, \"sprites/stars.png\", starsConfig);\n\n  // Spawn one particle every 0.1 second\n  loop(0.1, () => {\n    // TODO: they are resolving collision with each other for some reason\n    // Compose particle properties with components\n    const item = add([\n      pos(\n        new Vec2(\n          rand(position.x - PARTICLE_RANGE, position.x + PARTICLE_RANGE),\n          position.y\n        )\n      ),\n      sprite(Objects.STARS),\n      anchor(\"center\"),\n      body({ gravityScale: 0.04 }),\n      lifespan(1.5),\n      opacity(1),\n      Objects.STARS,\n    ]);\n\n    item.frame = getNewFrame(6);\n  });\n};\n\nconst getNewFrame = (size: number) => {\n  return Number(rand(0, size).toFixed(0));\n};\n","import { useBackground } from \"../hooks/useBackground\";\nimport { useColliders } from \"../hooks/useColliders\";\nimport { useCustomPostEffect } from \"../hooks/useCustomPostEffect\";\nimport { useDebugger } from \"../hooks/useDebugger\";\nimport { useFullScreen } from \"../hooks/useFullScreen\";\nimport { levelConfig } from \"../levels/level_1/config\";\nimport { getBrain } from \"../objects/brain/brain\";\nimport { getController } from \"../objects/controller/controller\";\nimport { getFuel } from \"../objects/fuel/fuel\";\nimport { getGrass, GrassType } from \"../objects/grass/grass\";\nimport { getCrystalPrinter } from \"../objects/machines/crystal/crystal\";\nimport { getFuelMachine } from \"../objects/machines/fuel/fuel\";\nimport { getMixMachine } from \"../objects/machines/mix/mix\";\nimport { getPowerPrinter } from \"../objects/machines/power/power\";\nimport { getPlayer } from \"../objects/player/player\";\nimport { getShip } from \"../objects/ship/ship\";\nimport { getStair } from \"../objects/stair/stair\";\nimport { getStarts } from \"../objects/starts/stars\";\nimport { k } from \"../settings/kaplay\";\nimport { Objects, Scenes } from \"../utils/types\";\n\nconst GRAVITY_DEFAULT = 1000;\nk.scene(Scenes.INITIAL, () => {\n  //Hooks\n  useFullScreen(\"f\");\n  useDebugger(\"r\");\n  useCustomPostEffect(\"g\", true);\n  useBackground(\"world\", vec2(0, 0), \"sprites/world.png\");\n\n  //Setup Physics\n  setGravity(GRAVITY_DEFAULT);\n\n  //Colliders\n  useColliders(levelConfig);\n\n  //Objects\n  const player = getPlayer(new Vec2(205, 173));\n\n  getStair(new Vec2(417, 136), \"sprites/stair_a.png\");\n  getStair(new Vec2(225, 184), \"sprites/stair_b.png\");\n  getStair(new Vec2(353, 72), \"sprites/stair_c.png\");\n\n  getShip(new Vec2(72, 240));\n\n  getController(new Vec2(326, 232));\n\n  getGrass(new Vec2(240, 248), GrassType.A, player, Objects.GRASS_A);\n  getGrass(new Vec2(258, 248), GrassType.B, player, Objects.GRASS_B);\n  getGrass(new Vec2(354, 248), GrassType.A, player, Objects.GRASS_C);\n  getGrass(new Vec2(363, 248), GrassType.B, player, Objects.GRASS_D);\n  getGrass(new Vec2(374, 248), GrassType.A, player, Objects.GRASS_E);\n  getGrass(new Vec2(409, 248), GrassType.A, player, Objects.GRASS_F);\n  getGrass(new Vec2(415, 248), GrassType.B, player, Objects.GRASS_G);\n  getGrass(new Vec2(423, 248), GrassType.B, player, Objects.GRASS_H);\n  getGrass(new Vec2(192, 184), GrassType.A, player, Objects.GRASS_I);\n  getGrass(new Vec2(200, 184), GrassType.B, player, Objects.GRASS_J);\n  getGrass(new Vec2(210, 184), GrassType.B, player, Objects.GRASS_K);\n  getGrass(new Vec2(307, 64), GrassType.C, player, Objects.GRASS_L);\n  getGrass(new Vec2(302, 240), GrassType.C, player, Objects.GRASS_M);\n  getGrass(new Vec2(325, 72), GrassType.A, player, Objects.GRASS_N);\n  getGrass(new Vec2(333, 72), GrassType.B, player, Objects.GRASS_O);\n  getGrass(new Vec2(343, 72), GrassType.A, player, Objects.GRASS_P);\n  getGrass(new Vec2(406, 136), GrassType.B, player, Objects.GRASS_Q);\n\n  getFuelMachine(new Vec2(192, 127));\n  getMixMachine(new Vec2(250, 47));\n  getCrystalPrinter(new Vec2(375, 109));\n  getPowerPrinter(new Vec2(433, 219));\n  getFuel(new Vec2(177, 210));\n  getStarts(new Vec2(90, 36));\n  getBrain(new Vec2(90, 56));\n});\n","import { k } from \"./settings/kaplay\";\nimport { Scenes } from \"./utils/types\";\n\n//Load Scenes\nimport \"./scenes/initial\";\n\nk.go(Scenes.INITIAL);\n"],"names":["k","kaplay","Objects","Events","Scenes","ConsumableTypes","useBackground","sprite","pos","src","useColliders","collisionObject","collider","effects","effect","useCustomPostEffect","key","enableOnStart","enableEffect","canDebug","useDebugger","useFullScreen","levelConfig","enemyOneConfig","alertConfig","ENEMY_SPAWN_DELAY","ENEMY_X_RANGE","HP","canSpawn","WAVE_COUNTER","getBrain","position","getEnemy1","alert","anim","enemy","projectile","InputMethod","InputConfig","isKeyHorizontalDown","isKeyVerticalDown","onInput","onPress","onRelease","type","keys","controllerConfig","IS_COLLIDING_PLAYER","getController","controller","fuelLineConfig","fuelIndicatorConfig","FUEL_DECREASE_DELAY","FIRING_DELAY","FUEL_NUMBER","CAN_CONSUME_FUEL","IS_FUEL_EMPTY","getFuel","fuelIndicator","fuelLine","cell_A","cell_B","cell_C","cell_D","cell_E","fuel_timer","grassConfigA","grassConfigB","grassConfigC","GrassType","GrassType2","getGrass","player","tag","loadGrass","config","grass","animation","printConfig","progressConfig","getProgress","onFinish","progress","canEnablePrint","canPrint","getCrystalPrinter","crystal","fuelConfig","isBuildingFuel","canAddFuel","getFuelMachine","fuelMachine","_","args","colliding","hasOrb","mixConfig","consumableConfig","canUploadItem","hasCrystal","hasPower","getMixMachine","mixMachine","power","getPowerPrinter","playerConfig","canDock","collidedObj","getCrystal","consumable","obj","lastPosition","getConsumableGround","getPower","orbConfig","getOrb","SPEED","THROW_FORCE","canMoveHorizontally","canMoveVertically","canMove","direction","canControlShip","getPlayer","handleAnimation","handleVerticalMovement","handleHorizontalMovement","handleController","handlePrintCrystal","handlePrintPower","handleCrystal","handlePower","handleOrb","handleUploadItem","crystalLocked","powerLocked","orb","ProjectileTypes","getProjectile","speed","proj","ShipFiringTypes","shipConfig","FIRE_TYPE","IS_FIRING","FIRE_DIRECTION","CAN_FIRE","getShip","ship","getStair","starsConfig","PARTICLE_RANGE","getStarts","item","getNewFrame","size","GRAVITY_DEFAULT"],"mappings":"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"}